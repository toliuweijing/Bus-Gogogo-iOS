//
// JsonModel.m
//
// Json Mapping Automatically Generated By JsonToolkit Library for Objective C
// Diego Trinciarelli 2011
//

#import "OBADataModel.h"

@implementation OBAResponse

@synthesize CurrentTime;
@synthesize Text;
@synthesize Data;
@synthesize Code;
@synthesize Version;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAResponse alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    CurrentTime = [dictionary objectForKey:@"currentTime"];
    Text = [dictionary objectForKey:@"text"];
    
    Data = [[OBAData alloc] initWithDictionary:[dictionary objectForKey:@"data"]];
    Code = [dictionary objectForKey:@"code"];
    Version = [dictionary objectForKey:@"version"];
  }
  return self;
}


@end


@implementation OBAAgency

@synthesize Id;
@synthesize PrivateService;
@synthesize Phone;
@synthesize Timezone;
@synthesize Disclaimer;
@synthesize Name;
@synthesize Lang;
@synthesize Url;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAAgency alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    Id = [dictionary objectForKey:@"id"];
    PrivateService = [dictionary objectForKey:@"privateService"];
    Phone = [dictionary objectForKey:@"phone"];
    Timezone = [dictionary objectForKey:@"timezone"];
    Disclaimer = [dictionary objectForKey:@"disclaimer"];
    Name = [dictionary objectForKey:@"name"];
    Lang = [dictionary objectForKey:@"lang"];
    Url = [dictionary objectForKey:@"url"];
  }
  return self;
}


@end


@implementation OBARoute

@synthesize Id;
@synthesize TextColor;
@synthesize Color;
@synthesize Description;
@synthesize LongName;
@synthesize Agency;
@synthesize ShortName;
@synthesize Type;
@synthesize Url;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBARoute alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    Id = [dictionary objectForKey:@"id"];
    TextColor = [dictionary objectForKey:@"textColor"];
    Color = [dictionary objectForKey:@"color"];
    Description = [dictionary objectForKey:@"description"];
    LongName = [dictionary objectForKey:@"longName"];
    
    Agency = [[OBAAgency alloc] initWithDictionary:[dictionary objectForKey:@"agency"]];
    ShortName = [dictionary objectForKey:@"shortName"];
    Type = [dictionary objectForKey:@"type"];
    Url = [dictionary objectForKey:@"url"];
  }
  return self;
}


@end


@implementation OBAStop

@synthesize Id;
@synthesize Lon;
@synthesize Routes;
@synthesize Direction;
@synthesize LocationType;
@synthesize Name;
@synthesize WheelchairBoarding;
@synthesize Code;
@synthesize Lat;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAStop alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    Id = [dictionary objectForKey:@"id"];
    Lon = [dictionary objectForKey:@"lon"];
    
    NSArray* temp =  [dictionary objectForKey:@"routes"];
    Routes =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [Routes addObject:[OBARoute objectWithDictionary:d]];
    }
    Direction = [dictionary objectForKey:@"direction"];
    LocationType = [dictionary objectForKey:@"locationType"];
    Name = [dictionary objectForKey:@"name"];
    WheelchairBoarding = [dictionary objectForKey:@"wheelchairBoarding"];
    Code = [dictionary objectForKey:@"code"];
    Lat = [dictionary objectForKey:@"lat"];
  }
  return self;
}

@end

@implementation OBAName

@synthesize Names;
@synthesize Name;
@synthesize Type;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAName alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    
    NSArray* temp =  [dictionary objectForKey:@"names"];
    Names =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [Names addObject:d];
    }
    Name = [dictionary objectForKey:@"name"];
    Type = [dictionary objectForKey:@"type"];
  }
  return self;
}


@end


@implementation OBAPolyline

@synthesize Levels;
@synthesize Length;
@synthesize Points;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAPolyline alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    Levels = [dictionary objectForKey:@"levels"];
    Length = [dictionary objectForKey:@"length"];
    Points = [dictionary objectForKey:@"points"];
  }
  return self;
}


@end


@implementation OBAStopGroup

@synthesize Id;
@synthesize Name;
@synthesize SubGroups;
@synthesize StopIds;
@synthesize Polylines;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAStopGroup alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    Id = [dictionary objectForKey:@"id"];
    
    Name = [[OBAName alloc] initWithDictionary:[dictionary objectForKey:@"name"]];
    
    NSArray* temp =  [dictionary objectForKey:@"subGroups"];
    SubGroups =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [SubGroups addObject:d];
    }
    
    temp =  [dictionary objectForKey:@"stopIds"];
    StopIds =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [StopIds addObject:d];
    }
    
    temp =  [dictionary objectForKey:@"polylines"];
    Polylines =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [Polylines addObject:[OBAPolyline objectWithDictionary:d]];
    }
  }
  return self;
}


@end


@implementation OBAStopGrouping

@synthesize Ordered;
@synthesize StopGroups;
@synthesize Type;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAStopGrouping alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    Ordered = [dictionary objectForKey:@"ordered"];
    
    NSArray* temp =  [dictionary objectForKey:@"stopGroups"];
    StopGroups =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [StopGroups addObject:[OBAStopGroup objectWithDictionary:d]];
    }
    Type = [dictionary objectForKey:@"type"];
  }
  return self;
}

@end

@implementation OBAData

@synthesize Stops;
@synthesize Route;
@synthesize StopGroupings;
@synthesize Polylines;

+ (id) objectWithDictionary:(NSDictionary*)dictionary
{
  id obj = [[OBAData alloc] initWithDictionary:dictionary];
  return obj;
}

- (id) initWithDictionary:(NSDictionary*)dictionary
{
  self=[super init];
  if(self)
  {
    
    NSArray* temp =  [dictionary objectForKey:@"stops"];
    Stops =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [Stops addObject:[OBAStop objectWithDictionary:d]];
    }
    
    Route = [[OBARoute alloc] initWithDictionary:[dictionary objectForKey:@"route"]];
    
    temp =  [dictionary objectForKey:@"stopGroupings"];
    StopGroupings =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [StopGroupings addObject:[OBAStopGrouping objectWithDictionary:d]];
    }
    
    temp =  [dictionary objectForKey:@"polylines"];
    Polylines =  [[NSMutableArray alloc] init];
    for (NSDictionary *d in temp) {
      [Polylines addObject:[OBAPolyline objectWithDictionary:d]];
    }
  }
  return self;
}


@end

//JsonModel.m End

